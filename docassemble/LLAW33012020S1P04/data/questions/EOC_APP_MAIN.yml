---
include:
  - EOC_APP_QUESTIONS.yml
  - EOC_APP_INELIGIBLE_ENDPOINTS.yml
  - EOC_APP_ELIGIBLE_ENDPOINTS.yml
  - EOC_APP_OTHER_BODIES_ENDPOINTS.yml
  - EOC_APP_SURVEY_CODE.yml
  - EOC_APP_RELIGIOUS_PUBLIC_LIFE_ENDPOINTS.yml
  - EOC_APP_DOMESTICPARTNER_PUBLIC_LIFE.yml
  - EOC_APP_PARTNERIDENTITY_PUBLIC_LIFE.yml
  - EOC_APP_ASSOCIATIONCHILD_PUBLIC_LIFE.yml
  - EOC_APP_PREGNANCY_PUBLIC_LIFE.yml
  - EOC_APP_CARING_PUBLIC_LIFE.yml
---
metadata:
  title: Is my complaint covered under the Equal Opportunity Act?
  authors:
    - name: Amelia Galpin
    - name: Holly Langford
    - name: Rebecca Rayner
    - name: Thomas Ramsey
  organisation:  Flinders University
---
objects:
  - endpoint: DADict
---
objects:
  - EOCLogo: DAStaticFile.using(filename='MicrosoftTeams-image-2.png')
---
mandatory: True
code: |
  TRlogo_string = '<img src="{}" height="40">'.format(EOCLogo.url_for())
  set_parts(logo=TRlogo_string)
---
features:
  css: EOCheader.css
  debug: False
  hide standard menu: True
---
mandatory: True
question: |

  <span class="EOCtitle">
   **Is my complaint covered under the Equal Opportunity Act?** 
  </span>

subquestion: |
  Thank you for visiting this application. This application will help determine whether or not the Equal Opportunity Commission has the authority under the *Equal Opportunity Act* to assist with your complaint. Where the Equal Opportunity Commission is not able to assist you, this application will help determine other complaints bodies which may be able to.
 
  Please note you might have a complaint of more than one type of discrimination, sexual harassment or victimisation by the same person or organisation. If you put in a complaint form, you can outline all of your complaints on the same form.
  
  If you are a **business applying for an exemption** to discriminate favourably on one particular group under the *Equal Opportunity Act*, this application may not help you. Please contact the Commission directly with your query. [Click here for their details.](${ url_of('https://eoc.sa.gov.au/contact') })
  
  
  **Disclaimer:**
  
    - *This application **does not provide** legal advice.*
      
    - *Please answer all questions honestly and correctly.* 
      
    - *This application does not guarantee the Equal Opportunity Commission or another complaint body will help you with your complaint. The Equal Opportunity Commission, or another complaint body, **will make the final decision** about your complaint.*
      
  
  If you click continue, you accept all these terms.

buttons:
  - "Continue": continue
  - "Exit": exit
    url: https://eoc.sa.gov.au
---
mandatory: True
question: |
  Contact Information
subquestion: |  
  Please provide your personal contact information below. 
  
  **Please note:** *Your personal information is **not** required to use this application. If you would prefer not to provide your personal details, please click continue.*
  
fields:
   - First Name: EOC_first_name
     input type: text
     required: false
   - Last Name: EOC_last_name
     required: false
   - Email Address: EOC_email_address
     datatype: email
     required: false
  
   - note:
       '**Please note:** providing your details does not mean the Equal Opportunity Commission will contact you.'
     hide if:
       variable: EOC_first_name
       is: null
     
under: |
      **Privacy Statement**: Personal information provided to the Equal Opportunity Commission is protected by the Information Privacy Principles (IPPS) Instruction.      
       [Please click here for further information](${ url_of('https://eoc.sa.gov.au/resources/privacy-policy') }).

---   
mandatory: True
code: |
  if ( person_aggrieved_eligible == False ):
    endpoint['notpersonaggrieved']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == False ):
    endpoint['notinSA']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == True ):
    endpoint['victimisation.sexualharrassment']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == True ):
    endpoint['extra_sections_eligible']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == False ):
    endpoint['nodiscrimination']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Other grounds' ):
    endpoint['noprotectedground']
---
mandatory: True
code: |
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Religious appearance or dress' and religious_area_eligible == False ):
    endpoint['religious_no_area_public_life']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Marital or domestic partnership status' and domestic_partner_area_public_life_eligible == False ):
    endpoint['domestic_partnership_no_public_life']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Identity of a spouse or domestic partner' and identity_of_partner_area_public_life_eligible == False ):
    endpoint['identity_of_partner_no_public_life'] 
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Association with a child' and association_with_child_area_public_life_eligible == False ):
    endpoint['association_with_child_no_public_life'] 
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Caring Responsibility' and caring_responsibility_area_public_life_eligible == False ):
    endpoint['caring_responsibility_no_public_life'] 
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Pregnancy' and pregnancy_area_public_life_eligible == False ):
    endpoint['pregnancy_no_public_life'] 
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Age' and area_public_life_eligible == False ): 
    endpoint['noareapubliclife']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Race' and area_public_life_eligible == False ): 
    endpoint['noareapubliclife']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Disability' and area_public_life_eligible == False ): 
    endpoint['noareapubliclife']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Sex' and area_public_life_eligible == False ): 
    endpoint['noareapubliclife']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Gender Identity' and area_public_life_eligible == False ):
    endpoint['noareapubliclife']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Sexual Orientation' and area_public_life_eligible == False ): 
    endpoint['noareapubliclife']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Intersex status' and area_public_life_eligible == False ): 
    endpoint['noareapubliclife']
---
mandatory: True
code: |
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Age' and state_or_federal == True ):
    endpoint['eligible']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Age' and state_or_federal == False ):
    endpoint['federal_eligible']

  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Race' and state_or_federal == True ):
    endpoint['eligible']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Race' and state_or_federal == False ):
    endpoint['federal_eligible']
   
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Disability' and state_or_federal == True ):
    endpoint['eligible']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Disability' and state_or_federal == False ):
    endpoint['federal_eligible']
  
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Sex' and state_or_federal == True ):
    endpoint['eligible']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Sex' and state_or_federal == False ):
    endpoint['federal_eligible']
 
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Gender Identity' and state_or_federal == True ):
    endpoint['eligible']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Gender Identity' and state_or_federal == False ):
    endpoint['federal_eligible']
   
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Sexual Orientation' and state_or_federal == True ):
    endpoint['eligible']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Sexual Orientation' and state_or_federal == False ):
    endpoint['federal_eligible']
   
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Religious appearance or dress' and religious_area_eligible == True and state_or_federal == True ):
    endpoint['eligible_religious_no_area_public_life']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Religious appearance or dress' and religious_area_eligible == True and state_or_federal == False ):
    endpoint['federal_religious_no_area_public_life']
    
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Marital or domestic partnership status' and domestic_partner_area_public_life_eligible == True and state_or_federal == True ):
    endpoint['eligible_domestic_partnership_no_public_life']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Marital or domestic partnership status' and domestic_partner_area_public_life_eligible == True and state_or_federal == False ):
    endpoint['federal_domestic_partnership_no_public_life']
    
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Identity of a spouse or domestic partner' and identity_of_partner_area_public_life_eligible == True and state_or_federal == True ):
    endpoint['eligible_identity_of_partner_no_public_life']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Identity of a spouse or domestic partner' and identity_of_partner_area_public_life_eligible == True and state_or_federal == False ):
    endpoint['federal_identity_of_partner_no_public_life']
    
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Association with a child' and association_with_child_area_public_life_eligible == True and state_or_federal == True ):
    endpoint['eligible_association_with_child_no_public_life']   
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Association with a child' and association_with_child_area_public_life_eligible == True and state_or_federal == False ):
    endpoint['federal_association_with_child_no_public_life'] 
    
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Caring Responsibility' and caring_responsibility_area_public_life_eligible == True and state_or_federal == True ):
    endpoint['eligible_caring_responsibility_no_public_life'] 
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Caring Responsibility' and caring_responsibility_area_public_life_eligible == True and state_or_federal == False ):
    endpoint['federal_caring_responsibility_no_public_life'] 

  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and  protected_ground == 'Pregnancy' and pregnancy_area_public_life_eligible == True and state_or_federal == True ):
    endpoint['eligible_pregnancy_no_public_life']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and  protected_ground == 'Pregnancy' and pregnancy_area_public_life_eligible == True and state_or_federal == False ):
    endpoint['federal_pregnancy_no_public_life']
    
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Intersex status' and state_or_federal == True ):
    endpoint['eligible']
  if ( person_aggrieved_eligible == True and incident_date_eligible == True and which_state == True and victimisation_sexualharrassment_eligible == False and extra_sections_answer == False and discrimination == True and protected_ground == 'Intersex status' and state_or_federal == False ):
    endpoint['federal_eligible']
---
mandatory: True
event: endpoint['notinSA']
code: |
  if different_state == 'Victoria':
    endpoint['Victoria']
  if different_state == 'NSW':
    endpoint['NSW']
  if different_state == 'Queensland':
    endpoint['Queensland']
  if different_state == 'Tasmania':
    endpoint['Tasmania']
  if different_state == 'Northern Territory':
    endpoint['NT']
  if different_state == 'Australian Capital Territory':
    endpoint['ACT']
  if different_state == 'Western Australia':
    endpoint['WA']
  if different_state == 'Outside Australia':
    endpoint['outsideAus']
---
mandatory: True
event: endpoint['victimisation.sexualharrassment']
code: |
  if victimisation_sexualharrassment2 == 'Victimisation':
    endpoint['victimisation']
  if victimisation_sexualharrassment2 == 'Sexual Harassment' and sexual_harassment_areapubliclife_eligible == False:
    endpoint['sexualharrassment_eligible']
  if victimisation_sexualharrassment2 == 'Sexual Harassment' and sexual_harassment_areapubliclife_eligible == True:
    endpoint['sexualharrassment_may_be_eligible']
   
---
mandatory: True
event: endpoint['nodiscrimination']
code: |
  if other_complaint_bodies == 'Housing Disputes':
    endpoint['housingdisputes']
  if other_complaint_bodies == 'Mental Health':
    endpoint['mentalhealth']
  if other_complaint_bodies == 'Consent Medical':
    endpoint['consentmedical']
  if other_complaint_bodies == 'Government Review':
    endpoint['governmentreview']
  if other_complaint_bodies == 'Advance Care':
    endpoint['advancecare']
  if other_complaint_bodies == 'Personal Affairs':
    endpoint['personalaffairs']
  if other_complaint_bodies == 'Workplace Discrimination':
    endpoint['workplacediscrimination']
  if other_complaint_bodies == 'Health, Safety and Workplace Relations':
    endpoint['hwsrelations']
  if other_complaint_bodies == 'Banking':
    endpoint['banking']
  if other_complaint_bodies == 'Consumer Rights':
    endpoint['consumerrights']
  if other_complaint_bodies == 'Administrative Government':
    endpoint['administrativegovernment']
  if other_complaint_bodies == 'Education':
    endpoint['education']
  if other_complaint_bodies == 'Electricity':
    endpoint['electricity']
  if other_complaint_bodies == 'Employment':
    endpoint['emplyoment']
  if other_complaint_bodies == 'Gas':
     endpoint['gas']
  if other_complaint_bodies == 'Guardianship of Young':
    endpoint['guardianshipyoung']
  if other_complaint_bodies == 'Health Care':
    endpoint['healthcare']
  if other_complaint_bodies == 'Human Rights':
    endpoint['humanrights']
  if other_complaint_bodies == 'Land':
    endpoint['land']
  if other_complaint_bodies == 'Lawyers':
    endpoint['lawyers']
  if other_complaint_bodies == 'Government':
    endpoint['government']
  if other_complaint_bodies == 'Media':
    endpoint['media']
  if other_complaint_bodies == 'Mentally Vulnerable':
    endpoint['mentallyvulnerable']
  if other_complaint_bodies == 'Phone/Internet':
    endpoint['internet']
  if other_complaint_bodies == 'Infrastructure':
    endpoint['infrastructure']
  if other_complaint_bodies == 'Police':
    endpoint['police']
  if other_complaint_bodies == 'Public Trustee':
    endpoint['publictrustee']
  if other_complaint_bodies == 'State Government':
    endpoint['stategovernment']
  if other_complaint_bodies == 'Transport':
    endpoint['transport']
  if other_complaint_bodies == 'Crime Victims':
    endpoint['crimevictims']
  if other_complaint_bodies == 'Water':
    endpoint['water']
  if other_complaint_bodies == 'ReturnToWorkSA':
    endpoint['returntowork']
  if other_complaint_bodies == 'None of the above':
    endpoint['noneoftheabove']
---
mandatory: True
event: endpoint['noprotectedground']
code: |
  if other_complaint_bodies == 'Housing Disputes':
    endpoint['protected_ground_housingdisputes']
  if other_complaint_bodies == 'Mental Health':
    endpoint['protected_ground_mentalhealth']
  if other_complaint_bodies == 'Consent Medical':
    endpoint['protected_ground_consentmedical']
  if other_complaint_bodies == 'Government Review':
    endpoint['protected_ground_governmentreview']
  if other_complaint_bodies == 'Advance Care':
    endpoint['protected_ground_advancecare']
  if other_complaint_bodies == 'Personal Affairs':
    endpoint['protected_ground_personalaffairs']
  if other_complaint_bodies == 'Workplace Discrimination':
    endpoint['protected_ground_workplacediscrimination']
  if other_complaint_bodies == 'Health, Safety and Workplace Relations':
    endpoint['protected_ground_hwsrelations']
  if other_complaint_bodies == 'Banking':
    endpoint['protected_ground_banking']
  if other_complaint_bodies == 'Consumer Rights':
    endpoint['protected_ground_consumerrights']
  if other_complaint_bodies == 'Administrative Government':
    endpoint['protected_ground_administrativegovernment']
  if other_complaint_bodies == 'Education':
    endpoint['protected_ground_education']
  if other_complaint_bodies == 'Electricity':
    endpoint['protected_ground_electricity']
  if other_complaint_bodies == 'Employment':
    endpoint['protected_ground_emplyoment']
  if other_complaint_bodies == 'Gas':
     endpoint['protected_ground_gas']
  if other_complaint_bodies == 'Guardianship of Young':
    endpoint['protected_ground_guardianshipyoung']
  if other_complaint_bodies == 'Health Care':
    endpoint['protected_ground_healthcare']
  if other_complaint_bodies == 'Human Rights':
    endpoint['protected_ground_humanrights']
  if other_complaint_bodies == 'Land':
    endpoint['protected_ground_land']
  if other_complaint_bodies == 'Lawyers':
    endpoint['protected_ground_lawyers']
  if other_complaint_bodies == 'Government':
    endpoint['protected_ground_government']
  if other_complaint_bodies == 'Media':
    endpoint['protected_ground_media']
  if other_complaint_bodies == 'Mentally Vulnerable':
    endpoint['protected_ground_mentallyvulnerable']
  if other_complaint_bodies == 'Phone/Internet':
    endpoint['protected_ground_internet']
  if other_complaint_bodies == 'Infrastructure':
    endpoint['protected_ground_infrastructure']
  if other_complaint_bodies == 'Police':
    endpoint['protected_ground_police']
  if other_complaint_bodies == 'Public Trustee':
    endpoint['protected_ground_publictrustee']
  if other_complaint_bodies == 'State Government':
    endpoint['protected_ground_stategovernment']
  if other_complaint_bodies == 'Transport':
    endpoint['protected_ground_transport']
  if other_complaint_bodies == 'Crime Victims':
    endpoint['protected_ground_crimevictims']
  if other_complaint_bodies == 'Water':
    endpoint['protected_ground_water']
  if other_complaint_bodies == 'ReturnToWorkSA':
    endpoint['protected_ground_returntowork']
  if other_complaint_bodies == 'None of the above':
    endpoint['protected_ground_noneoftheabove']
---
mandatory: True
event: endpoint['noareapubliclife'] 
code: |
  if other_complaint_bodies == 'Housing Disputes':
    endpoint['noareapubliclife_housingdisputes']
  if other_complaint_bodies == 'Mental Health':
    endpoint['noareapubliclife_mentalhealth']
  if other_complaint_bodies == 'Consent Medical':
    endpoint['noareapubliclife_consentmedical']
  if other_complaint_bodies == 'Government Review':
    endpoint['noareapubliclife_governmentreview']
  if other_complaint_bodies == 'Advance Care':
    endpoint['noareapubliclife_advancecare']
  if other_complaint_bodies == 'Personal Affairs':
    endpoint['noareapubliclife_personalaffairs']
  if other_complaint_bodies == 'Workplace Discrimination':
    endpoint['noareapubliclife_workplacediscrimination']
  if other_complaint_bodies == 'Health, Safety and Workplace Relations':
    endpoint['noareapubliclife_hwsrelations']
  if other_complaint_bodies == 'Banking':
    endpoint['noareapubliclife_banking']
  if other_complaint_bodies == 'Consumer Rights':
    endpoint['noareapubliclife_consumerrights']
  if other_complaint_bodies == 'Administrative Government':
    endpoint['noareapubliclife_administrativegovernment']
  if other_complaint_bodies == 'Education':
    endpoint['noareapubliclife_education']
  if other_complaint_bodies == 'Electricity':
    endpoint['noareapubliclife_electricity']
  if other_complaint_bodies == 'Employment':
    endpoint['noareapubliclife_emplyoment']
  if other_complaint_bodies == 'Gas':
     endpoint['noareapubliclife_gas']
  if other_complaint_bodies == 'Guardianship of Young':
    endpoint['noareapubliclife_guardianshipyoung']
  if other_complaint_bodies == 'Health Care':
    endpoint['noareapubliclife_healthcare']
  if other_complaint_bodies == 'Human Rights':
    endpoint['noareapubliclife_humanrights']
  if other_complaint_bodies == 'Land':
    endpoint['noareapubliclife_land']
  if other_complaint_bodies == 'Lawyers':
    endpoint['noareapubliclife_lawyers']
  if other_complaint_bodies == 'Government':
    endpoint['noareapubliclife_government']
  if other_complaint_bodies == 'Media':
    endpoint['noareapubliclife_media']
  if other_complaint_bodies == 'Mentally Vulnerable':
    endpoint['mentallyvulnerable']
  if other_complaint_bodies == 'Phone/Internet':
    endpoint['noareapubliclife_internet']
  if other_complaint_bodies == 'Infrastructure':
    endpoint['noareapubliclife_infrastructure']
  if other_complaint_bodies == 'Police':
    endpoint['noareapubliclife_police']
  if other_complaint_bodies == 'Public Trustee':
    endpoint['noareapubliclife_publictrustee']
  if other_complaint_bodies == 'State Government':
    endpoint['noareapubliclife_stategovernment']
  if other_complaint_bodies == 'Transport':
    endpoint['noareapubliclife_transport']
  if other_complaint_bodies == 'Crime Victims':
    endpoint['noareapubliclife_crimevictims']
  if other_complaint_bodies == 'Water':
    endpoint['noareapubliclife_water']
  if other_complaint_bodies == 'ReturnToWorkSA':
    endpoint['noareapubliclife_returntowork']
  if other_complaint_bodies == 'None of the above':
    endpoint['noareapubliclife_noneoftheabove']

---
code: |
  if (person_aggrieved == 'Yes, I am the person aggrieved by the action' or 
    person_aggrieved == 'No, but the person aggrieved is a child (under 18)' or 
    person_aggrieved == 'No, but the person aggrieved is intellectually incapable'):
    person_aggrieved_eligible = True
  else:
    person_aggrieved_eligible = False 
---
code: |
  if incident_date == 'The incident occurred within the **last 12 months**' or 'The incident occurred **over 12 months ago**' or 'I do not remember when the incident occurred':
    incident_date_eligible = True
---
code: |
  if which_state:
    which_state_answer = 'Yes'
  else:
    which_state_answer = 'No'
---
code: |
  if victimisation_sexualharrassment:
    victimisation_sexualharrassment_answer = 'Yes'
  else: 
    victimisation_sexualharrassment_answer = 'No'
---
code: |
  if victimisation_sexualharrassment == 'Yes':
    victimisation_sexualharrassment_eligible = True
  else:
    victimisation_sexualharrassment_eligible = False
---
code: |
  if sexual_harassment_areapubliclife == 'None of the above':
    sexual_harassment_areapubliclife_eligible = True
  else:
    sexual_harassment_areapubliclife_eligible = False
---
code: |
  if extra_sections == 'Refusal or deferral of an application for accommodation on the basis that it would be shared accommodation with a child' or extra_sections == 'Refusal or deferral of an application for accommodation on the basis that a therapeutic animal would be kept at that accommodation' or extra_sections == 'An educational authority discriminates against a student by denying or limiting access to the educational services provided on the ground that the student is breast feeding an infant or proposes to do so' or extra_sections == 'A condition or requirement was imposed that resulted in you being separated from your disability assistance animal':
    extra_sections_answer = True
  else:
    extra_sections_answer = False
---
code: |
  if discrimination:
    discrimination_answer = 'Yes'
  else:
    discrimination_answer = 'No'
---
code: |
  if (protected_ground == 'Sex' or 
    protected_ground == 'Sexual Orientation' or 
    protected_ground == 'Gender Identity' or 
    protected_ground == 'Intersex status' or
    protected_ground == 'Race' or 
    protected_ground == 'Disability' or 
    protected_ground == 'Age' or 
    protected_ground == 'Marital or domestic partnership status' or
    protected_ground == 'Identity of a spouse or domestic partner' or
    protected_ground == 'Pregnancy' or 
    protected_ground == 'Association with a child' or 
    protected_ground == 'Caring Responsibility' or
    protected_ground == 'Religious appearance or dress' ):
    protected_ground_eligible = True
  else:
    protected_ground_eligible = False
---
code: |
  if ( religious_area_public_life == 'Education' or 
    religious_area_public_life == 'Employment' ):
    religious_area_eligible = True
  else:
    religious_area_eligible = False
---
code: |
  if ( area_public_life == 'Employment' or 
  area_public_life == 'Customer Service' or 
  area_public_life == 'Accomodation' or 
  area_public_life == 'Selling Land' or 
  area_public_life == 'Clubs and Associations' or 
  area_public_life == 'Advertising' or 
  area_public_life == 'Education' or 
  area_public_life == 'Granting Qualifications' ):
    area_public_life_eligible = True
  else:
    area_public_life_eligible = False
---
code: |
  if ( domestic_partner_area_public_life == 'Employment' or
  domestic_partner_area_public_life == 'Education' or
  domestic_partner_area_public_life == 'Clubs and Associations' or
  domestic_partner_area_public_life == 'Granting Qualifications' or
  domestic_partner_area_public_life == 'Selling Land' or 
  domestic_partner_area_public_life == 'Customer Service' or 
  domestic_partner_area_public_life == 'Accomodation' ):
    domestic_partner_area_public_life_eligible = True
  else:
    domestic_partner_area_public_life_eligible = False
---
code: |
  if ( identity_of_partner_area_public_life == 'Employment' or
  identity_of_partner_area_public_life == 'Associations and Clubs' or
  identity_of_partner_area_public_life == 'Granting Qualifications' or 
  identity_of_partner_area_public_life == 'Education' or
  identity_of_partner_area_public_life == 'Selling Land' or
  identity_of_partner_area_public_life == 'Customer Service' or
  identity_of_partner_area_public_life == 'Accommodation' ):
    identity_of_partner_area_public_life_eligible = True
  else:
    identity_of_partner_area_public_life_eligible = False
---
code: |
  if association_with_child_area_public_life == 'Customer Service':
    association_with_child_area_public_life_eligible = True
  else:
    association_with_child_area_public_life_eligible = False
---
code: |
  if ( caring_responsibility_area_public_life == 'Employment' or
  caring_responsibility_area_public_life == 'Association' or
  caring_responsibility_area_public_life == 'Granting Qualifications' or 
  caring_responsibility_area_public_life == 'Education' or 
  caring_responsibility_area_public_life == 'Selling Land' or
  caring_responsibility_area_public_life == 'Customer Service' or
  caring_responsibility_area_public_life == 'Accommodation' ):
    caring_responsibility_area_public_life_eligible = True
  else:
    caring_responsibility_area_public_life_eligible = False
---
code: |
  if ( pregnancy_area_public_life == 'Employment' or pregnancy_area_public_life == 'Clubs and Associations' or pregnancy_area_public_life == 'Granting Qualifications' or pregnancy_area_public_life == 'Education' or pregnancy_area_public_life == 'Selling Land' or pregnancy_area_public_life == 'Customer Service' or pregnancy_area_public_life == 'Accomodation' ):
    pregnancy_area_public_life_eligible = True
  else: 
    pregnancy_area_public_life_eligible = False
---
code: |
  if state_or_federal:
    state_or_federal_answer = 'South Australian State Level'
  else:
    state_or_federal_answer = 'Australian Federal Level'
---
default screen parts:
  post: |
    <div style="display: flex; height: 200px; align-items: flex-end; flex-direction: row-reverse">
    <div style="margin: 5px"><img src="https://staff.flinders.edu.au/etc.clientlibs/flinders/clientlibs/clientlib-site/resources/images/flinderuni_main_logo_black.png" height="40">
    </div>
    <div style="margin: 5px; text-align: center">
    <cite><small><i>
    Developed by Flinders University in collaboration with The Equal Opportunity Commission.
    </i></small></cite>
    </div>
    </div>
---
image sets:
  docassemble:
    attribution: |
      This is the image attribution.
    images:
      star: star.svg
---
